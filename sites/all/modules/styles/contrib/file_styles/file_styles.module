<?php
// $Id: file_styles.module,v 1.1.2.8.2.6 2011/01/05 16:51:22 aaron Exp $

/**
 *  @file
 *  File widget formatter definitions.
 */

/**
 * Implementation of Styles module hook_styles_register().
 */
function file_styles_styles_register() {
  return array(
    'FileStyles' => array(
      'field_types' => 'file',
      'name' => t('file'),
      'description' => t('file styles'),
      'path' => drupal_get_path('module', 'file_styles') .'/includes/styles',
      'file' => 'FileStyles.inc',
    ),
  );
}

/**
 * Styles filter callback.
 *
 * This will determine the correct style container corresponding to media type.
 */
function file_styles_styles_filter($object, $element = NULL) {
  // Ensure we're working against the fully loaded file object.
  $file = media_load($object->fid);

  // Allow other modules to define their own file styles.
  // In general, they'll most likely want to check against the mimetype.
  $containers = styles_default_containers('file');
  $filters = module_invoke_all('file_styles_filter', $object);

  foreach ($filters as $filter) {
    if (isset($containers['containers'][$filter])) {
      return $filter;
    }
  }

  // Now check the part of the mimetype before the slash.
  // Note that we can't use strstr($haystack, $needle, $before_needle)
  // < PHP 5.3, so we need a work-around.
  $filter = file_styles_strstr($object->filemime, '/', TRUE);
  if (isset($containers['containers'][$filter])) {
    return $filter;
  }

  // Fallback to default.
  return 'default';
}

/**
 * Support for strstr with $before_needle < PHP 5.3.
 */
function file_styles_strstr($haystack, $needle, $before_needle = FALSE){
  if ($before_needle) {
    return array_shift(explode($needle, $haystack, 2));
  }
  return strstr($haystack, $needle);
}

function file_styles_theme() {
  return array(
    'file_styles_image' => array(
      'variables' => array('image_uri' => '', 'alt' => '', 'title' => '', 'attributes' => array(), 'image_style' => NULL, 'instance' => NULL),
    ),
  );
}

function theme_file_styles_image($variables) {
  if (isset($variables['image_style'])) {
    $output = theme('image_style', array('style_name' => $variables['image_style'], 'path' => $variables['image_uri'], 'alt' => $variables['alt'], 'title' => $variables['title'], 'getsize' => FALSE, 'attributes' => $variables['attributes']));
  }
  else {
    $output = theme('image', array('path' => $variables['image_uri'], 'alt' => $variables['alt'], 'title' => $variables['title'], 'getsize' => FALSE, 'attributes' => $variables['attributes']));
  }
  return $output;
}
